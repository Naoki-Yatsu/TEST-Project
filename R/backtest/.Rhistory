test
require(modeest)
install.packages("modeest")
require(modeest)
library(help = "modeest")
require(quantmod)
require(PerformanceAnalytics)
getSymbols("^GSPC",from="1896-01-01",to=Sys.Date())
GSPC.monthly <- to.monthly(GSPC)[,4]
View(GSPC.monthly)
index(GSPC.monthly) <- as.Date(index(GSPC.monthly))   #width will represent number of months for mode
View(GSPC.monthly)
width = 10
for (i in width:NROW(GSPC.monthly)) {
#not real proud of this code
#please feel free to comment with improvements
m.default <- mlv(GSPC.monthly[(i-width):i])
m.lientz <- mlv(GSPC.monthly[(i-width):i], method = "lientz", bw=0.01)
m.hrm <- mlv(GSPC.monthly[(i-width):i], method = "hrm", bw=0.01)
m.hsm <- mlv(GSPC.monthly[(i-width):i], method = "hsm",tie.action = "mean")
m.grenander <- mlv(GSPC.monthly[(i-width):i], method = "grenander", p = 0.5)
m.parzen <- mlv(GSPC.monthly[(i-width):i], method = "parzen", kernel = "gaussian")
m.tsybakov <- mlv(GSPC.monthly[(i-width):i], method = "tsybakov")
m.asselin <- mlv(GSPC.monthly[(i-width):i], method = "asselin")
m.vieu <- mlv(GSPC.monthly[(i-width):i], method = "vieu")   m.all <- c(as.numeric(m.default[1]), as.numeric(m.lientz[1]),
as.numeric(m.hrm[1]), as.numeric(m.hsm[1]), as.numeric(m.grenander[1]),
as.numeric(m.parzen[1]), as.numeric(m.tsybakov[1]),
as.numeric(m.asselin[1]), as.numeric(m.vieu[1]))
for (i in width:NROW(GSPC.monthly)) {
#not real proud of this code
#please feel free to comment with improvements
m.default <- mlv(GSPC.monthly[(i-width):i])
m.lientz <- mlv(GSPC.monthly[(i-width):i], method = "lientz", bw=0.01)
m.hrm <- mlv(GSPC.monthly[(i-width):i], method = "hrm", bw=0.01)
m.hsm <- mlv(GSPC.monthly[(i-width):i], method = "hsm",tie.action = "mean")
m.grenander <- mlv(GSPC.monthly[(i-width):i], method = "grenander", p = 0.5)
m.parzen <- mlv(GSPC.monthly[(i-width):i], method = "parzen", kernel = "gaussian")
m.tsybakov <- mlv(GSPC.monthly[(i-width):i], method = "tsybakov")
m.asselin <- mlv(GSPC.monthly[(i-width):i], method = "asselin")
m.vieu <- mlv(GSPC.monthly[(i-width):i], method = "vieu")   m.all <- c(as.numeric(m.default[1]), as.numeric(m.lientz[1]),
as.numeric(m.hrm[1]), as.numeric(m.hsm[1]), as.numeric(m.grenander[1]),
as.numeric(m.parzen[1]), as.numeric(m.tsybakov[1]),
as.numeric(m.asselin[1]), as.numeric(m.vieu[1]))
ifelse(i==width, m.hist <- m.all, m.hist <- rbind(m.hist,m.all))
}
for (i in width:NROW(GSPC.monthly)) {
#not real proud of this code
#please feel free to comment with improvements
m.default <- mlv(GSPC.monthly[(i-width):i])
m.lientz <- mlv(GSPC.monthly[(i-width):i], method = "lientz", bw=0.01)
m.hrm <- mlv(GSPC.monthly[(i-width):i], method = "hrm", bw=0.01)
m.hsm <- mlv(GSPC.monthly[(i-width):i], method = "hsm",tie.action = "mean")
m.grenander <- mlv(GSPC.monthly[(i-width):i], method = "grenander", p = 0.5)
m.parzen <- mlv(GSPC.monthly[(i-width):i], method = "parzen", kernel = "gaussian")
m.tsybakov <- mlv(GSPC.monthly[(i-width):i], method = "tsybakov")
m.asselin <- mlv(GSPC.monthly[(i-width):i], method = "asselin")
m.vieu <- mlv(GSPC.monthly[(i-width):i], method = "vieu")]
m.all <- c(as.numeric(m.default[1]), as.numeric(m.lientz[1]),
as.numeric(m.hrm[1]), as.numeric(m.hsm[1]), as.numeric(m.grenander[1]),
as.numeric(m.parzen[1]), as.numeric(m.tsybakov[1]),
as.numeric(m.asselin[1]), as.numeric(m.vieu[1]))
ifelse(i==width, m.hist <- m.all, m.hist <- rbind(m.hist,m.all))
}
for (i in width:NROW(GSPC.monthly)) {
#not real proud of this code
#please feel free to comment with improvements
m.default <- mlv(GSPC.monthly[(i-width):i])
m.lientz <- mlv(GSPC.monthly[(i-width):i], method = "lientz", bw=0.01)
m.hrm <- mlv(GSPC.monthly[(i-width):i], method = "hrm", bw=0.01)
m.hsm <- mlv(GSPC.monthly[(i-width):i], method = "hsm",tie.action = "mean")
m.grenander <- mlv(GSPC.monthly[(i-width):i], method = "grenander", p = 0.5)
m.parzen <- mlv(GSPC.monthly[(i-width):i], method = "parzen", kernel = "gaussian")
m.tsybakov <- mlv(GSPC.monthly[(i-width):i], method = "tsybakov")
m.asselin <- mlv(GSPC.monthly[(i-width):i], method = "asselin")
m.vieu <- mlv(GSPC.monthly[(i-width):i], method = "vieu")]
m.all <- c(as.numeric(m.default[1]), as.numeric(m.lientz[1]),
as.numeric(m.hrm[1]), as.numeric(m.hsm[1]), as.numeric(m.grenander[1]),
as.numeric(m.parzen[1]), as.numeric(m.tsybakov[1]),
as.numeric(m.asselin[1]), as.numeric(m.vieu[1]))
ifelse(i==width, m.hist <- m.all, m.hist <- rbind(m.hist,m.all))
}
for (i in width:NROW(GSPC.monthly)) {
#not real proud of this code
#please feel free to comment with improvements
m.default <- mlv(GSPC.monthly[(i-width):i])
m.lientz <- mlv(GSPC.monthly[(i-width):i], method = "lientz", bw=0.01)
m.hrm <- mlv(GSPC.monthly[(i-width):i], method = "hrm", bw=0.01)
m.hsm <- mlv(GSPC.monthly[(i-width):i], method = "hsm",tie.action = "mean")
m.grenander <- mlv(GSPC.monthly[(i-width):i], method = "grenander", p = 0.5)
m.parzen <- mlv(GSPC.monthly[(i-width):i], method = "parzen", kernel = "gaussian")
m.tsybakov <- mlv(GSPC.monthly[(i-width):i], method = "tsybakov")
m.asselin <- mlv(GSPC.monthly[(i-width):i], method = "asselin")
m.vieu <- mlv(GSPC.monthly[(i-width):i], method = "vieu")]
for (i in width:NROW(GSPC.monthly)) {
#not real proud of this code
#please feel free to comment with improvements
m.default <- mlv(GSPC.monthly[(i-width):i])
m.lientz <- mlv(GSPC.monthly[(i-width):i], method = "lientz", bw=0.01)
m.hrm <- mlv(GSPC.monthly[(i-width):i], method = "hrm", bw=0.01)
m.hsm <- mlv(GSPC.monthly[(i-width):i], method = "hsm",tie.action = "mean")
m.grenander <- mlv(GSPC.monthly[(i-width):i], method = "grenander", p = 0.5)
m.parzen <- mlv(GSPC.monthly[(i-width):i], method = "parzen", kernel = "gaussian")
m.tsybakov <- mlv(GSPC.monthly[(i-width):i], method = "tsybakov")
m.asselin <- mlv(GSPC.monthly[(i-width):i], method = "asselin")
m.vieu <- mlv(GSPC.monthly[(i-width):i], method = "vieu")
m.all <- c(as.numeric(m.default[1]), as.numeric(m.lientz[1]),
as.numeric(m.hrm[1]), as.numeric(m.hsm[1]), as.numeric(m.grenander[1]),
as.numeric(m.parzen[1]), as.numeric(m.tsybakov[1]),
as.numeric(m.asselin[1]), as.numeric(m.vieu[1]))
ifelse(i==width, m.hist <- m.all, m.hist <- rbind(m.hist,m.all))
}
m.xts <- as.xts(as.data.frame(m.hist),order.by=index(GSPC.monthly[(width):NROW(GSPC.monthly),]))
View(m.xts)
m.xts <- merge(m.xts,runMean(GSPC.monthly,n=10),runMedian(GSPC.monthly,n=10))
colnames(m.xts) <- c("default","lientz","hrm","hsm","grenander","parzen","tsybakov","asselin","vieu","mean","median")
GSPC.mode <- merge(GSPC.monthly,m.xts)   #there has to be a much cleaner way to accomplish this
signal <- GSPC.mode[,2:NCOL(GSPC.mode)]
ret <- GSPC.mode[,2:NCOL(GSPC.mode)]
for (i in 1:NCOL(signal)) {
signal[,i] <- ifelse(GSPC.mode[,1] > GSPC.mode[,i+1],1,0)
ret[,i] <- lag(signal[,i],k=1) * ROC(GSPC.mode[,1],type="discrete",n=1)
}
ret <- merge(ret,ROC(GSPC.mode[,1],type="discrete",n=1))
#jpeg(filename="modeest performance summary.jpg",
#	quality=100,width=6.25, height = 6.25,  units="in",res=96)
charts.PerformanceSummary(ret,ylog=TRUE,lwd=c(rep(2,9),rep(4,3)),main="Modeest System Comparison with Mean and Median")
chart.RiskReturnScatter(ret)
charts.PerformanceSummary(ret,ylog=TRUE)
c(rep(2,9)
c(rep(2,9))
c(rep(2,9))
charts.PerformanceSummary(ret,ylog=TRUE,lwd=c(rep(2,9)))
charts.PerformanceSummary(ret,ylog=TRUE)
charts.PerformanceSummary(ret,ylog=TRUE)
charts.PerformanceSummary(ret,ylog=TRUE)
ret
library(PerformanceAnalytics)
n <- 12
d <- 1000
v <- xts(matrix(rnorm(n*d,0.0001,0.003),ncol=n),Sys.Date()-c(1:d))
View(v)
Sys.Date()
Sys.Date()-c(1:d)
rnorm(n*d,0.0001,0.003)
matrix(rnorm(n*d,0.0001,0.003),ncol=n)
v
View(v)
LETTERS[1:n]
colnames(v) <- LETTERS[1:n]
View(v)
charts.PerformanceSummary(v,col=rainbow12equal)
charts.PerformanceSummary(v,colorset=rainbow12equal)
