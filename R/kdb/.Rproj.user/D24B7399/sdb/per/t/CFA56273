{
    "contents" : "\n# load q server\nsource(\"c:/r/qServer.R\")\nSys.setenv(TZ=\"GMT\")\n\n# milisec\noptions(digits.secs=3)\n\n# Open connection\nh5011 <- open_connection(\"192.168.0.55\",5011,\":\")\nh5012 <- open_connection(\"192.168.0.55\",5012,\":\")\nh5013 <- open_connection(\"192.168.0.55\",5013,\":\")\nh     <- open_connection(\"192.168.0.55\",5013,\":\")\n\nclose_connection(h)\n\n# Query\nexecute(h, \"tables[]\")\nexecute(h, \"100#select from MarketData where date=2014.01.02\")\n\nres <- \n\nquery <- \"`time xasc select time:`timestamp$marketDateTime, price:bid from MarketData where date=2014.01.10, sym=`USDJPY\"\nquery <- \"getOHLCTick[dates; symbol; 100]\"\n\nfxdata <- execute(h, query)\n\nrequire(quantmod)\n\nfxdata.xts <-xts(fxdata[,-1], order.by=fxdata[,'time'])\ncandlecolors <- ifelse(fxdata.xts[,'close'] > fxdata.xts[,'open'], 'GREEN', 'RED')\nplot.xts(fxdata.xts, type='candles', width=100,candle.col=candlecolors,bar.col ='BLACK',xlab=\"time\",ylab=\"price\",main=\"TEST\")\n\npar(xaxt=\"n\")\nplot.xts(fxdata.xts, type='candles', width=100,candle.col=candlecolors,bar.col ='BLACK',xlab=\"time\",ylab=\"price\",main=\"TEST\")\npar(xaxt=\"s\")\naxis.POSIXct(side=1, x=index(fxdata.xts), format=\"%Y-%m-%d %H:%M\")\naxis.POSIXct(side=1, x=index(fxdata.xts), format=\"%H:%M\")\n\nchartSeries(fxdata.xts)\n\n\n# ========================================================\n#    xts でグラフを書く\n# ========================================================\n\nrequire(quantmod)\n\n# extract the HLOC buckets in 5 minute intervals\nres <- execute(h, \"getOHLC[dates; symbol]\")\nres <- execute(h, \"getOHLCTick[2014.05.01 2014.05.02; symbol; 100]\")\n\n\n￼# create an xts object from the returned data frame\n# order on the time column\nres.xts <-xts(res[,-1], order.by=res[,'time'])\n\n￼# create a vector of colours for the graph\n# based on the relative open and close prices\ncandlecolors <- ifelse(res.xts[,'close'] > res.xts[,'open'], 'GREEN', 'RED')\n\n￼￼￼￼￼# display the candle graph with approrpiate labels\nplot.xts(res.xts,type='candles',width=100,candle.col=candlecolors,bar.col ='BLACK',xlab=\"time\",ylab=\"price\",main=\"TEST\")\n\n\n# Change X Axis\npar(xaxt=\"n\")\nplot.xts(res.xts,type='candles',width=100,candle.col=candlecolors,bar.col ='BLACK',xlab=\"time\",ylab=\"price\",main=\"TEST\")\npar(xaxt=\"s\")\naxis.POSIXct(side=1, x=index(res.xts), format=\"%Y-%m-%d %H:%M\")\n\n\n\n# ========================================================\n#    quantmod でグラフを書く\n# ========================================================\n\nlibrary(quantmod)\n\n# extract the last closing price in 30 second buckets\nres<-execute(h,\"select close:last price by time:0D00:00:30 xbar date+time from trade where date=2014.01.14,sym=`GOOG,time within 09:30 16:00\")\n\n# create the closing price xts object\ncloses <-xts(res[,-1], order.by=res[,'time'])\n\n# create xts object\nresxts <- XXX\n\n# chart it. Add Bollinger Bands to the main graph\n# add additional Relative Strength Indicator and Rate Of Change graphs\nchartSeries(resxts)\naddSMA(100)\naddEMA(20, col=\"blue\")\n\nzooom()\nzoomChart()\n\n\nchartSeries(closes,theme=chartTheme(\"white\"),TA=c(addBBands(),addTA(RSI( closes)),addTA(ROC(closes))))\n\n\n# ========================================================\n#    knitr\n# ========================================================\n\n(s = system.file(\"examples\", \"knitr-spin.R\", package = \"knitr\"))\nspin(s)\n\nres <- execute(h, \"plReport[]\")\n\nggplot(res, aes(x=timestamp, y=midPrice)) + geom_line()\n\nggplot(res, aes(x=timestamp, y=plJpy)) + geom_line()\n\n\n\n\n\n\n\n\n",
    "created" : 1410583121898.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4119497490",
    "id" : "CFA56273",
    "lastKnownWriteTime" : 1412086006,
    "path" : "J:/git/algorithm-trading-system/algorithm-trading-system/R/kdb/kdb_query.R",
    "project_path" : "kdb_query.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}